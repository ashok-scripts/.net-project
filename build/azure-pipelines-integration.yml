# Branches that trigger a build on commit
trigger:
- feature/integration-tests

# Branches that trigger builds on PR
pr:
- feature/integration-tests

jobs:
- job: Visual_Studio
  pool: dotnet-external-vs2019-preview
  strategy:
    maxParallel: 2
    matrix:
      Debug:
        _configuration: Debug
      Release:
        _configuration: Release
  timeoutInMinutes: 20
  steps:
    - script: $(Build.SourcesDirectory)\build\IntegrationCIBuild.cmd -configuration $(_configuration) -prepareMachine
    - task: VSTest@2
      inputs:
        testSelector: 'testAssemblies'
        testAssemblyVer2: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\bin\IntegrationTests\*.IntegrationTests.dll!$(Build.SourcesDirectory)\artifacts\$(_configuration)\obj\**' # Required when testSelector == TestAssemblies
        vsTestVersion: 'latest'
        runSettingsFile: '$(Build.SourcesDirectory)\artifacts\IntegrationTestTemp\integration.runsettings'
        runInParallel: False
        runTestsInIsolation: True
        codeCoverageEnabled: False
        publishRunAttachments: True
        diagnosticsEnabled: True
        collectDumpOn: 'onAbortOnly'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\log'
        ArtifactName: '$(_configuration) unit test logs'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\bin'
        ArtifactName: '$(_configuration) bin folder'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\VSSetup'
        ArtifactName: '$(_configuration) VSSetup folder'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\TestResults'
        ArtifactName: '$(_configuration) Test Result Logs'
        publishLocation: Container
      continueOnError: true
      condition: failed()
    # - task: PublishTestResults@2
    #   inputs:
    #     testRunner: 'xUnit'
    #     testResultsFiles: '**/*.xml' 
    #     searchFolder: '$(Build.SourcesDirectory)\artifacts\$(_configuration)\TestResults'
    #     configuration: '$(_configuration)'
    #     publishRunAttachments: true
    #     failTaskOnFailedTests: true
    #   continueOnError: true
    #   condition: always()
