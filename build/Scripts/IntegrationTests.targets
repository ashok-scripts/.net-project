<Project>
  <!-- 
   
   Runs APEX integration tests for a project via vstest.console.exe
  
   Inputs:
  
    $(VSSDKTargetPlatformRegRootSuffix):  The root suffix of the hive to open.
    $(VisualStudioXamlRulesDir):          The build output location containing the XAML rules.
    $(ArtifactsTestResultsDir):           The build output location where test results are output.
  -->       
  
  <Target 
    Name="IntegrationTest" 
    DependsOnTargets="GenerateRunSettings;ExecuteTests;ReportTestResults" 
    />

  <PropertyGroup>
    <TestResultsDirectory>$(ArtifactsTestResultsDir)</TestResultsDirectory>
    <RunSettingsFilePath>$(IntermediateOutputPath)$(TargetName)$(TargetExt).runsettings</RunSettingsFilePath>
    <MediaRecorderDirectory>$(PkgMicrosoft_DevDiv_Validation_MediaRecorder)\lib\net461</MediaRecorderDirectory>
  </PropertyGroup>

  <Target Name="GenerateRunSettings">

    <Error
      Text="The project must be restored before running tests"
      File="$(MSBuildProjectFile)"
      Condition="!Exists('$(MediaRecorderDirectory)')"
      />
    
    <PropertyGroup>
      <RunSettingsContents>
        <![CDATA[
<RunSettings>
  <TestRunParameters>
    <Parameter name="VsRootSuffix" value="$(VSSDKTargetPlatformRegRootSuffix)" />
  </TestRunParameters>
  <RunConfiguration>
    <MaxCpuCount>1</MaxCpuCount>
    <TestAdaptersPaths>$(MediaRecorderDirectory)</TestAdaptersPaths>
  </RunConfiguration>
  
  <DataCollectionRunSettings>
    <DataCollectors>
      <DataCollector friendlyName="Screen and Voice Recorder" uri="datacollector://Microsoft/DevDiv/VideoRecorder/2.0" assemblyQualifiedName="Microsoft.DevDiv.Validation.MediaRecorder.Collector, Microsoft.DevDiv.Validation.MediaRecorder.Collector.VideoRecorderDataCollector, Version=15.0.0.0, Culture=neutral, PublicKeyToken=null" enabled="true">
        <Configuration>
          <MediaRecorder>
            <AudioRecorder enabled="false" />
          </MediaRecorder>
        </Configuration>
      </DataCollector>
    </DataCollectors>
  </DataCollectionRunSettings>
  
  <MSTest>
     <DeploymentEnabled>false</DeploymentEnabled>
     <DeleteDeploymentDirectoryAfterTestRunIsComplete>False</DeleteDeploymentDirectoryAfterTestRunIsComplete>
  </MSTest>
</RunSettings>
]]>
      </RunSettingsContents>
    </PropertyGroup>

    <WriteLinesToFile 
      File="$(RunSettingsFilePath)"
      Lines="$(RunSettingsContents)"
      Overwrite="true" 
      />

  </Target>

  <Target Name="ExecuteTests">

    <PropertyGroup>
      <TrxLogFileName>$(TargetName)$(TargetExt).trx</TrxLogFileName>
      <TrxLogFilePath>$(TestResultsDirectory)$(TrxLogFileName)</TrxLogFilePath>
      <VSTestExeEnvironment>
        VisualBasicDesignTimeTargetsPath=$(VisualStudioXamlRulesDir)Microsoft.VisualBasic.DesignTime.targets;
        FSharpDesignTimeTargetsPath=$(VisualStudioXamlRulesDir)Microsoft.FSharp.DesignTime.targets;
        CSharpDesignTimeTargetsPath=$(VisualStudioXamlRulesDir)Microsoft.CSharp.DesignTime.targets;
      </VSTestExeEnvironment>
    </PropertyGroup>

    <MakeDir Directories="$(TestResultsDirectory)" />

    <Error 
      Text="The project must built before running tests"
      File="$(MSBuildProjectFile)"
      Condition="!Exists('$(TargetPath)')"
      />

    <Message 
      Text="$(MSBuildProjectName) -> Running tests (this might take a while)..."
      Importance="High"
      />

    <!-- Delete the TRX to avoid warning about overwriting it -->
    <Delete Files="$(TrxLogFilePath)" />

    <Exec 
      Command='vstest.console.exe /Blame /ResultsDirectory:"$(TestResultsDirectory)\" /Settings:"$(RunSettingsFilePath)" /Logger:trx;LogFileName=$(TrxLogFileName) "$(TargetPath)"'
      EnvironmentVariables="$(VSTestExeEnvironment)"
      LogStandardErrorAsError="true"
      StandardOutputImportance="Low"
      IgnoreExitCode="true"
      >
      
      <Output 
        TaskParameter="ExitCode" 
        PropertyName="_VSTestConsoleExitCode"
        />
      
    </Exec>

  </Target>

  <Target Name="ReportTestResults">

    <Message
      Text="$(MSBuildProjectName) -> Tests succeeded"
      Condition="$(_VSTestConsoleExitCode) == 0"
      Importance="High"
      />

    <Error
      Text="The test runner failed with $(_VSTestConsoleExitCode) and did not produce a log file. See Build.binlog for more information." 
      Condition="$(_VSTestConsoleExitCode) != 0 AND !Exists('$(TrxLogFilePath')" />

    <Error
      Text="Tests failed, see $(TrxLogFilePath) for full results."
      Condition="$(_VSTestConsoleExitCode) != 0 AND Exists('$(TrxLogFilePath')" 
      File="Apex"
      />
    
  </Target>

</Project>